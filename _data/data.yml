#
# Be aware that even a small syntax error here can lead to failures in output.
#

sidebar:
    about: False # set to False or comment line if you want to remove the "how to use?" in the sidebar
    education: True # set to False if you want education in main section instead of in sidebar

    # Profile information
    name: Aaron Goldsmith
    tagline: DevOps Engineering Manager
    avatar: profile.jpg  #place a 100x100 picture inside /assets/images/ folder and provide the name of the file below

    # Sidebar links
    email: goldsmithaaron@gmail.com
    phone: 770-722-0674
    website: ausmith.me #do not add http://
    linkedin: aarongoldsmith
    github: ausmith
    gitlab:
    bitbucket:
    twitter: '@goldsmithaaron'
    stack-overflow: # Number/Username, e.g. 123456/alandoe
    codewars:

    languages:
      - idiom: English
        level: Native

    interests:
      - item: Work Life Balance
        link:

      - item: Ultimate Frisbee
        link:

      - item: Video Games
        link:

career-profile:
    title: About Me
    summary: |
      An engineering manager with extensive experience building and maintaining 
      internal developer platforms. Have a penchant for DevOps and SRE leaning
      teams. The values that have enabled my success are my passion for strong
      communication, desire to understand the whole of any given system, and
      tapping into people's passions to inspire and engage them in the workplace.

education:
    - degree: Bachelors in Computer Science
      university: Georgia Institute of Technology
      time: 2006 - 2011
      details:

experiences:
    - role: Software Engineer -> Engineering Manager
      time: 2019 - Present
      company: Block - Remote
      details: |
        In 2019, joined the team who managed a homegrown orchestration
        system in our datacenters. Shortly after joining, began leading
        a volunteer group to spin up the replacement Kubernetes platform
        in AWS. In 2021, moved from tech lead to engineering manager of
        the team and began building the cloud continuous deployment system.
        In 2022, the organization began a major cloud migration, resulting
        in growing the team from 7 to 14 engineers and breaking them into
        two squads (one focused on CD and the other on making cloud migration
        easy).
        
          - Maintain datacenter uptime, reliability, and compliance while
            building replacement Kubernetes platform.
          - Built highly scalable shared Kubernetes platform where deployed
            services are secure by default through the use of:
            - RBAC for strong namespace isolation and following least privilege.
            - A namespace per deployed service.
            - Pod Security Policies to restrict containers from potentially
              privileged linux capabilities.
            - Network policies restrict workload network access for least
              privilege.
            - Cluster autoscaling via custom code and enable Horizontal Pod
              Autoscaling for apps via metrics outside the clusters.
            - Each service could use OIDC to assume their own IAM role, keeping
              access to the application's own resources only.
          - Operated the platform such that PCI and SOX compliant applications
            passed audits while running in the clusters.
          - Built CD system from the ground up to enable both Kubernetes and
            Lambda code deployments.
            - Integrated artifact inventory system with build system to enable
              autodeployments.
            - Used per workload attested agents to restrict pipeline access such
              that they could only access their workload's resources for deployment.
            - Built in pipeline customizations like pausing for human validation
              while adding metrics validation to pipelines (not complete yet).
            - Kept each target's (Kubernetes and Lambda) capabilities in parity
              throughout build out.
          - Organized and led multiple gameday activities focused on partnering
            with security incident response team with our Kubernetes platform.
            - Scenarios included investigating monitoring gaps, identifying
              malicious behavior in the clusters, and recommending remediation.
            - Used as both training opportunities and practice sessions.
          - Piloted DevOps hiring process, eventually codifying it for managers
            around the company to use.
          - Contributed to a documentation working group to help improve and unify
            documentation around the organization, resulting in the hiring of
            technical writer contractors to help.
          - Heavily involved in the annual planning process to define, scope,
            and identify team dependencies for large scale projects that impact
            the shared Kubernetes platform.
          - Advise other teams on how to build for the cloud and for Kubernetes.
          - Maintain close relationships across platform and security engineering
            organizations regardless of business unit.
          - Handled multiple vendor relationships from start to annual review. 
            Included identifying vendors and establishing which ones to move to
            contract negotiations, negotiate the contracts and coordinate both 
            legal and security reviews, secure budget, and renegotiate renewals.

        Toolbox:

          - Kubernetes
          - AWS
          - Linux
          - Python
          - Bash
          - Ruby
          - Go
          - CI/CD (Buildkite)
          - Terraform
          - Docker
          - git and GitHub
          - People management
          - Large project management
          - Technical leadership

    - role: DevOps Engineer
      time: 2016 - 2018
      company: Pindrop - Atlanta, Georgia
      details: |
        Part of team managing Kubernetes clusters across multiple regions
        and used by the cloud organization.

          - Monitor and maintain multiple Kubernetes clusters.
            - Clusters are deployed to AWS using Terraform.
            - Monitoring through statsd metrics and logstash log collection.
          - Handle different SLAs between development and production clusters.
          - Build in zero downtime deployments for cluster level updates and
            upgrades.
          - Build self-service portal to improve user credentialing process.
          - Train teams on moving services and applications into Kubernetes.
            - Put together workshops, provide documentation, conduct regular
              office hours, and hold one-on-one sessions with other team members.
            - Topics range from migration into Kubernetes, to architectural
              design, to best resource utilization and required AWS resources.
          - Automated the deployment and updates of the Kubernetes clusters
            as well as the delivery of AWS resources for other teams.
            - CI/CD architecture through Drone.
            - Utilized the same toolchain between CI/CD and personal systems
              using a single docker container.
            - All tools wrapped in easy to use Python or Bash scripts to help
              reduce new engineer startup time.

        Toolbox:

          - AWS
          - Terraform
          - Docker
          - Kubernetes
          - CI/CD (Drone and Jenkins)
          - git and GitHub
          - Python
          - Bash
          - Chef
          - Statsd
          - Logstash
          - Relational databases (PostgreSQL and MySQL)
          - Linux

    - role: Software Engineer
      time: 2014 - 2016
      company: CareerBuilder - Norcross, Georgia
      details: |
        Member of a platform team for the company's public website.

          - Architect proxy layer to facilitate platform switch from legacy
            systems.
          - Managed AWS footprint for greenfield projects and switched
            team to doing infrastructure as code (AWS CloudFormation).
          - Introduced security-minded system configuration.
            - Brought in a vendor to help us audit our AWS configuration
              and stay ahead of potential vulnerabilities.
          - Ran a security workshop to show how a single weak link can
            compromise an organization (github.com/ausmith/poormans-labyrinth).
          - Spoke internally about what we learned moving off a legacy
            platform.
          - Mentored others on coding best practices.
            - Covered general and Ruby specific best practices.
          - Automated the setup of engineer development environments to
            reduce spin up time for new engineers.
          - Managed relationships with multiple vendors and encouraged
            collaboration between organizations.

        Toolbox:

          - AWS
          - CloudFormation
          - CI/CD (TeamCity and CodeDeploy)
          - git and GitHub
          - Ruby
          - Bash
          - Groovy
          - Chef
          - Relational databases (PostgreSQL)
          - Linux

    - role: Software Engineer
      time: 2014
      company: GovDelivery - St Paul, Minnesota
      details: |
        Member of team managing our primary Ruby on Rails application.

          - Maintained, updated, and upgraded applications to fulfill
            customer needs.
          - Contributed to upgrading Rails projects from 3.X to Rails 4.X.
          - Closely collaborated with quality assurance and product management.
          - Rebuilt internal Jenkins build box via Puppet while upgrading OS
            (CentOS 5 to CentOS 6).

        Toolbox:

          - Ruby
          - Javascript
          - Puppet
          - Relational databses (Oracle)

    - role: Software Engineer
      time: 2011 - 2014
      company: Damballa - Atlanta, Georgia
      details: |
        Member of an internal services and platform team that helped research
        and other engineering groups.

          - Managed and maintained field data for data scientists to process.
          - Handled all infrastructure between threat analysts and the knowledge
            delivery to systems in the field.
            - Command line tools for annotating threat knowledge.
            - Application with business logic for converting research data to
              product consumable format.
            - Delivery engine of knowledge base updates for devices in the field.
          - Stored information about files collected by systems in the field,
            managed infrastructure to analyze those files, and delivered results
            via an API.

        Toolbox:

          - Ruby
          - Python
          - C
          - Puppet
          - Linux
          - AWS
          - Relational and non-relational databases (MySQL, PostgreSQL,
            CouchDB, Cassandra)

projects:
    title: Conference Talks
    intro:

    assignments:
      - title: How NOT to Review a Pull Request
        link: "https://github.com/ausmith/How-NOT-to-Review-a-Pull-Request/"
        tagline: "A guide, through negative examples, on avoiding code review pitfalls. Presented at multiple DevOps conferences nation wide."

#publications:
#    title: Conference Talks
#    intro:
#
#    papers:
#      - title: How NOT to Review a Pull Request
#        authors: Donald E. Knuth
#        conference: Addison-Wesley, 1968

skills:
    title: Toolbox Proficiency

    toolset:
      - title: Cloud Technologies
        skills:
        - name: AWS
          level: 98%

      - title: Languages and Frameworks
        skills:
        - name: Ruby and Ruby on Rails
          level: 70%

        - name: Python
          level: 70%

        - name: golang
          level: 60%

        - name: C
          level: 30%

        - name: Node.js
          level: 30%

      - title: Systems
        skills:
        - name: Linux
          level: 80%

      - title: Configuration Management
        skills:
        - name: Terraform
          level: 95%

        - name: CloudFormation
          level: 85%

        - name: Puppet
          level: 40%

        - name: Chef
          level: 40%

      - title: Databases
        skills:
        - name: SQL (PostgreSQL, MySQL, Oracle)
          level: 70%

        - name: CouchDB
          level: 20%

        - name: Cassandra
          level: 20%

footer: >
    Theme designed with <i class="fas fa-heart"></i> by <a href="http://themes.3rdwavemedia.com" target="_blank" rel="nofollow">Xiaoying Riley</a>.
    Jekyll template from <a href="https://github.com/sharu725/online-cv" target="_blank">sharu725/online-cv</a>.
